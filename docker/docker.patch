diff --git a/CMakeLists.txt b/CMakeLists.txt
index 104fd9d..f1f86f1 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -31,39 +31,43 @@
 cmake_minimum_required(VERSION 2.8)
 project(superpixel_benchmark)
 
+set(CMAKE_CXX_STANDARD 14)
+set(CMAKE_CXX_STANDARD_REQUIRED ON)
+# set(CMAKE_CXX_EXTENSIONS OFF)  # Optional, disables compiler-specific extensions like gnu++14
+
 set(CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)
 set(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin)
 set(CMAKE_CXX_FLAGS  "-Wall -Wno-sign-compare -g -std=c++0x -O4 -fpermissive")
 
 # "Core algorithms" as recommended:
-option(BUILD_ETPS "Build ETPS" ON)
-option(BUILD_SLIC "Build SLIC" ON)
-option(BUILD_SEEDS "Build SEEDS" ON)
-option(BUILD_RESEEDS "Build reSEEDS" ON)
-option(BUILD_ERS "Build ERS" ON)
-option(BUILD_CRS "Build CRS" ON)
-option(BUILD_ERGC "Build ERGC" ON)
+option(BUILD_ETPS "Build ETPS" OFF)
+option(BUILD_SLIC "Build SLIC" OFF)
+option(BUILD_SEEDS "Build SEEDS" OFF)
+option(BUILD_RESEEDS "Build reSEEDS" OFF)
+option(BUILD_ERS "Build ERS" OFF)
+option(BUILD_CRS "Build CRS" OFF)
+option(BUILD_ERGC "Build ERGC" OFF)
 
 # Remaining algorithms:
+# CIS is OFF due to restrictive licensing
+
 option(BUILD_FH "Build FH" OFF)
 option(BUILD_MSS "Build MSS" OFF)
 option(BUILD_PB "Build PB" OFF)
 option(BUILD_PRESLIC "Build preSLIC" OFF)
-option(BUILD_CW "Build CW" OFF)
+option(BUILD_CW "Build CW" ON)
 option(BUILD_CIS "Build CIS" OFF)
 option(BUILD_W "Build W" OFF)
 option(BUILD_LSC "Build LSC" OFF)
 option(BUILD_VC "Build VC" OFF)
 option(BUILD_CCS "Build CCS" OFF)
-option(BUILD_VC "Build VC" OFF)
-option(BUILD_CCS "Build CCS" OFF)
 option(BUILD_DASP "Build DASP" OFF)
 option(BUILD_VCCS "Build VCCS" OFF)
-option(BUILD_REFH "Build reFH" ON)
+option(BUILD_REFH "Build reFH" OFF)
 option(BUILD_VLSLIC "Build vlSLIC" OFF)
 
 # Examples:
-option(BUILD_EXAMPLES "Build examples" ON)
+option(BUILD_EXAMPLES "Build examples" OFF)
 
 # Toolbox
 add_subdirectory(lib_eval)
diff --git a/cmake/FindGlog.cmake b/cmake/FindGlog.cmake
index a529148..944b52d 100644
--- a/cmake/FindGlog.cmake
+++ b/cmake/FindGlog.cmake
@@ -28,7 +28,7 @@ find_library(GLOG_LIBRARY glog libglog
         lib
         lib64)
 
-find_package_handle_standard_args(GLOG DEFAULT_MSG
+find_package_handle_standard_args(Glog DEFAULT_MSG
     GLOG_INCLUDE_DIR GLOG_LIBRARY)
 
 if(GLOG_FOUND)
diff --git a/dasp_cli/main.cpp b/dasp_cli/main.cpp
index 5cf712a..7f4bdfa 100755
--- a/dasp_cli/main.cpp
+++ b/dasp_cli/main.cpp
@@ -40,6 +40,13 @@
 #include "superpixel_tools.h"
 #include "visualization.h"
 
+// 20250605 OpenCV4 upgrades -- mathematicalmichael
+#include <opencv2/core/version.hpp>
+#if CV_VERSION_MAJOR >= 4
+    #undef CV_LOAD_IMAGE_ANYDEPTH
+    #define CV_LOAD_IMAGE_ANYDEPTH cv::IMREAD_ANYDEPTH
+#endif
+
 /** \brief Command line tool for running DASP.
  * Usage:
  * \code{sh}
diff --git a/examples/cpp/evaluation.cpp b/examples/cpp/evaluation.cpp
index ed0dab3..133b7ef 100644
--- a/examples/cpp/evaluation.cpp
+++ b/examples/cpp/evaluation.cpp
@@ -36,6 +36,16 @@
 #include "superpixel_tools.h"
 #include "evaluation.h"
 
+// 20250605 OpenCV4 upgrades -- mathematicalmichael
+#include <opencv2/core/version.hpp>
+#if CV_VERSION_MAJOR >= 4
+    // #include <opencv2/imgproc.hpp>
+    #undef CV_BGR2GRAY
+    #undef CV_DIST_L2
+    #define CV_BGR2GRAY cv::COLOR_BGR2GRAY
+    #define CV_DIST_L2  cv::DIST_L2
+#endif
+
 /** \brief Example of using the evaluation metrics, demonstrated on the ground
  * truth from the BSDS500; also demonstrates the influence of connected components.
  * Usage:
diff --git a/lib_ccs/FriendFunctions.h b/lib_ccs/FriendFunctions.h
index 78d8d0b..92ec65c 100644
--- a/lib_ccs/FriendFunctions.h
+++ b/lib_ccs/FriendFunctions.h
@@ -10,6 +10,11 @@
 //#include <atlstr.h>
 #include "opencv2/opencv.hpp"
 
+// 20250605 OpenCV4 upgrades -- mathematicalmichael
+#include <opencv2/core/version.hpp>
+#if CV_VERSION_MAJOR >= 4
+	#include <opencv2/core/core_c.h>  // IplImage
+#endif
 
 using namespace std;
 typedef unsigned char uchar;
diff --git a/lib_ccs/Hexagon.h b/lib_ccs/Hexagon.h
index 658c6d8..504e920 100644
--- a/lib_ccs/Hexagon.h
+++ b/lib_ccs/Hexagon.h
@@ -13,6 +13,12 @@
 #include "BasicStructures.h"
 #include <time.h>
 
+// 20250605 OpenCV4 upgrades -- mathematicalmichael
+#include <opencv2/core/version.hpp>
+#if CV_VERSION_MAJOR >= 4
+    #include <opencv2/core/core_c.h>  // IplImage
+#endif
+
 typedef unsigned char uchar;
 
 /////////////////////////////////////////
diff --git a/lib_ccs/SegmentExtraction.h b/lib_ccs/SegmentExtraction.h
index e796455..00067f6 100644
--- a/lib_ccs/SegmentExtraction.h
+++ b/lib_ccs/SegmentExtraction.h
@@ -13,6 +13,12 @@
 #include "BasicStructures.h"
 #include <time.h>
 
+// 20250605 OpenCV4 upgrades -- mathematicalmichael
+#include <opencv2/core/version.hpp>
+#if CV_VERSION_MAJOR >= 4
+    #include <opencv2/core/core_c.h>  // IplImage
+#endif
+
 typedef unsigned char uchar;
 typedef unsigned int UINT;
 /////////////////////////////////////////
diff --git a/lib_ccs/cMOG.h b/lib_ccs/cMOG.h
index 5943935..c7876f3 100644
--- a/lib_ccs/cMOG.h
+++ b/lib_ccs/cMOG.h
@@ -14,6 +14,15 @@
 #include <opencv2/imgproc/imgproc.hpp>
 using namespace cv;
 
+// 20250605 OpenCV4 upgrades -- mathematicalmichael
+#include <opencv2/core/version.hpp>
+#if CV_VERSION_MAJOR >= 4
+    #include <opencv2/core/core_c.h>  // IplImage definition
+    #include <opencv2/imgproc/imgproc_c.h>  // cvCreateImage, etc.
+#else  // from OpenCV 1.x  -- removed in OpenCV 4.x
+    #include "cv.h"
+#endif
+
 class MOG
 {
 	private:
diff --git a/lib_ccs/ccs_opencv.cpp b/lib_ccs/ccs_opencv.cpp
index 7e816dc..402b3e1 100644
--- a/lib_ccs/ccs_opencv.cpp
+++ b/lib_ccs/ccs_opencv.cpp
@@ -34,6 +34,16 @@
 #include "FriendFunctions.h"
 #include "ccs_opencv.h"
 
+// 20250605 OpenCV4 upgrades -- mathematicalmichael
+#include <opencv2/core/version.hpp>
+#if CV_VERSION_MAJOR >= 4
+    #include <opencv2/core/core_c.h>  // IplImage
+    // #include <opencv2/imgproc/imgproc_c.h>  // cvSmooth
+    // #include <opencv2/highgui/highgui_c.h>
+    #undef CV_BGR2Lab
+    #define CV_BGR2Lab cv::COLOR_BGR2Lab
+#endif
+
 void CCS_OpenCV::computeSuperpixels(const cv::Mat& mat, int region_size, 
         int iterations, int compactness, bool lab, cv::Mat& labels) {
     
diff --git a/lib_ccs/fMOG.cpp b/lib_ccs/fMOG.cpp
index 213af15..abd7fe7 100644
--- a/lib_ccs/fMOG.cpp
+++ b/lib_ccs/fMOG.cpp
@@ -1,14 +1,14 @@
 /*
  * fMOG.cpp
  *
- *  Created on: 02 Aðu 2011
- *      Author: Tuðhan Marpuç
+ *  Created on: 02 AÃ°u 2011
+ *      Author: TuÃ°han MarpuÃ§
  */
 
 
 #include <iostream>
 #include "cMOG.h"
-#include "cv.h"
+
 
 using namespace cv;
 using namespace std;
diff --git a/lib_crs/crs_opencv.h b/lib_crs/crs_opencv.h
index 01992f1..19018e0 100644
--- a/lib_crs/crs_opencv.h
+++ b/lib_crs/crs_opencv.h
@@ -37,6 +37,15 @@
 #include "ContourRelaxation.h"
 #include "InitializationFunctions.h"
 
+// 20250605 OpenCV4 upgrades -- mathematicalmichael
+#include <opencv2/core/version.hpp>
+#if CV_VERSION_MAJOR >= 4
+    #undef CV_BGR2YCrCb
+    #undef CV_GRAY2BGR
+    #define CV_BGR2YCrCb cv::COLOR_BGR2YCrCb
+    #define CV_GRAY2BGR cv::COLOR_GRAY2BGR
+#endif
+
 /** \brief Wrapper for running CRS on OpenCV images.
  * \author David Stutz
  */
diff --git a/lib_cw/compact_watershed.cpp b/lib_cw/compact_watershed.cpp
index d85c8d7..dee990f 100644
--- a/lib_cw/compact_watershed.cpp
+++ b/lib_cw/compact_watershed.cpp
@@ -67,7 +67,9 @@
  */
 
 #include "compact_watershed.h"
-#include <cxmisc.h>
+#include <opencv2/core/version.hpp>
+#include <opencv2/core/core_c.h>
+#include <opencv2/core/types_c.h>
 
 /****************************************************************************************\
 *                                Compact Watershed                                      *
@@ -192,7 +194,7 @@ namespace cws
       if( !CV_ARE_SIZES_EQ( src, dst ))
           CV_Error( CV_StsUnmatchedSizes, "The input and output images must have the same size" );
 
-      size = cvGetMatSize(src);
+      size = cvSize(src->cols, src->rows);
       storage = cvCreateMemStorage();
 
       istep = src->step;
@@ -353,11 +355,22 @@ namespace cws
   }
 
 
-  void compact_watershed( InputArray _src, InputOutputArray markers , float compValStep)
+  void compact_watershed(InputArray _src, InputOutputArray markers, float compValStep)
   {
-      Mat src = _src.getMat();
-      CvMat c_src = _src.getMat(), c_markers = markers.getMat();
-      cws::cvWatershed( &c_src, &c_markers,compValStep );
+    cv::Mat src = _src.getMat();
+    cv::Mat markerMat = markers.getMat();
+
+  #if CV_VERSION_MAJOR < 4
+    // OpenCV 2.x/3.x: Use the old C API conversion
+    CvMat c_src = src;
+    CvMat c_markers = markerMat;
+    cws::cvWatershed(&c_src, &c_markers, compValStep);
+  #else
+    // OpenCV 4.x: C API is deprecated; use the data pointer to create a CvMat header
+    CvMat c_src = cvMat(src.rows, src.cols, src.type(), src.data);
+    CvMat c_markers = cvMat(markerMat.rows, markerMat.cols, markerMat.type(), markerMat.data);
+    cws::cvWatershed(&c_src, &c_markers, compValStep);
+  #endif
   }
 } // namespace cws
 
diff --git a/lib_dasp/lib_dasp/Graph.hpp b/lib_dasp/lib_dasp/Graph.hpp
index f095835..75d3f85 100755
--- a/lib_dasp/lib_dasp/Graph.hpp
+++ b/lib_dasp/lib_dasp/Graph.hpp
@@ -12,7 +12,7 @@
 #include "as_range.hpp"
 #include "graphseg.hpp"
 #include <boost/graph/adjacency_list.hpp>
-#include <Eigen/Dense>
+#include <eigen3/Eigen/Dense>
 
 namespace dasp
 {
diff --git a/lib_dasp/lib_dasp/IO.hpp b/lib_dasp/lib_dasp/IO.hpp
index 8f74c64..dfd2770 100755
--- a/lib_dasp/lib_dasp/IO.hpp
+++ b/lib_dasp/lib_dasp/IO.hpp
@@ -2,7 +2,7 @@
 #define INCLUDED_DASP_IO_HPP_
 
 #include "Graph.hpp"
-#include <Eigen/Dense>
+#include <eigen3/Eigen/Dense>
 #include <string>
 #include <vector>
 
diff --git a/lib_dasp/lib_dasp/Metric.hpp b/lib_dasp/lib_dasp/Metric.hpp
index c3d06c1..43828ee 100755
--- a/lib_dasp/lib_dasp/Metric.hpp
+++ b/lib_dasp/lib_dasp/Metric.hpp
@@ -11,7 +11,7 @@
 #include "Point.hpp"
 #include <Danvil/Tools/MoreMath.h>
 #include <Danvil/Tools/FunctionCache.h>
-#include <Eigen/Dense>
+#include <eigen3/Eigen/Dense>
 
 namespace dasp
 {
diff --git a/lib_dasp/lib_dasp/Neighbourhood.hpp b/lib_dasp/lib_dasp/Neighbourhood.hpp
index 2ef4dbc..e6a4ca4 100755
--- a/lib_dasp/lib_dasp/Neighbourhood.hpp
+++ b/lib_dasp/lib_dasp/Neighbourhood.hpp
@@ -13,7 +13,7 @@
 #include <Slimage/Slimage.hpp>
 #include <boost/graph/adjacency_list.hpp>
 #include <boost/graph/copy.hpp>
-#include <Eigen/Dense>
+#include <eigen3/Eigen/Dense>
 #include <vector>
 
 namespace dasp
diff --git a/lib_dasp/lib_dasp/Plots.cpp b/lib_dasp/lib_dasp/Plots.cpp
index 0b76fef..181a868 100755
--- a/lib_dasp/lib_dasp/Plots.cpp
+++ b/lib_dasp/lib_dasp/Plots.cpp
@@ -17,7 +17,7 @@
 #include <Danvil/Color.h>
 #include <Danvil/Color/LAB.h>
 #include <Danvil/Color/HSV.h>
-#include <Eigen/Geometry>
+#include <eigen3/Eigen/Geometry>
 #include <cmath>
 #include <iostream>
 
diff --git a/lib_dasp/lib_dasp/Point.hpp b/lib_dasp/lib_dasp/Point.hpp
index 7dc12ba..654fab3 100755
--- a/lib_dasp/lib_dasp/Point.hpp
+++ b/lib_dasp/lib_dasp/Point.hpp
@@ -11,7 +11,7 @@
 #include "Parameters.hpp"
 #include "Array.hpp"
 #include <Danvil/Tools/MoreMath.h>
-#include <Eigen/Dense>
+#include <eigen3/Eigen/Dense>
 #include <vector>
 
 namespace dasp
diff --git a/lib_dasp/lib_dasp/Seed.hpp b/lib_dasp/lib_dasp/Seed.hpp
index a2e3f08..63d0247 100755
--- a/lib_dasp/lib_dasp/Seed.hpp
+++ b/lib_dasp/lib_dasp/Seed.hpp
@@ -8,7 +8,7 @@
 #ifndef DASP_SEED_HPP_
 #define DASP_SEED_HPP_
 
-#include <Eigen/Dense>
+#include <eigen3/Eigen/Dense>
 
 namespace dasp
 {
diff --git a/lib_dasp/lib_dasp/Segmentation.hpp b/lib_dasp/lib_dasp/Segmentation.hpp
index f129901..a598fd2 100755
--- a/lib_dasp/lib_dasp/Segmentation.hpp
+++ b/lib_dasp/lib_dasp/Segmentation.hpp
@@ -13,7 +13,7 @@
 #include <Labeling.hpp>
 #include <graphseg.hpp>
 #include <Slimage/Slimage.hpp>
-#include <Eigen/Dense>
+#include <eigen3/Eigen/Dense>
 #include <boost/graph/adjacency_list.hpp>
 #include <boost/graph/copy.hpp>
 #include <vector>
diff --git a/lib_dasp/lib_dasp/impl/Clustering.hpp b/lib_dasp/lib_dasp/impl/Clustering.hpp
index 312b949..397e008 100755
--- a/lib_dasp/lib_dasp/impl/Clustering.hpp
+++ b/lib_dasp/lib_dasp/impl/Clustering.hpp
@@ -12,7 +12,7 @@
 #include "../Parameters.hpp"
 #include "../Metric.hpp"
 #include <Slimage/Slimage.hpp>
-#include <Eigen/Dense>
+#include <eigen3/Eigen/Dense>
 #include <iostream>
 
 namespace dasp
diff --git a/lib_dasp/lib_dasp/impl/Sampling.hpp b/lib_dasp/lib_dasp/impl/Sampling.hpp
index 37c00c2..39bd014 100755
--- a/lib_dasp/lib_dasp/impl/Sampling.hpp
+++ b/lib_dasp/lib_dasp/impl/Sampling.hpp
@@ -10,7 +10,7 @@
 
 #include "../Point.hpp"
 #include "../Seed.hpp"
-#include <Eigen/Dense>
+#include <eigen3/Eigen/Dense>
 #include <vector>
 
 namespace dasp
diff --git a/lib_dasp/lib_dasp_common/color.hpp b/lib_dasp/lib_dasp_common/color.hpp
index 49ce261..755fa0f 100755
--- a/lib_dasp/lib_dasp_common/color.hpp
+++ b/lib_dasp/lib_dasp_common/color.hpp
@@ -2,7 +2,7 @@
 #define COMMON_COLOR_HPP_
 //----------------------------------------------------------------------------//
 #include <Danvil/Color.h>
-#include <Eigen/Dense>
+#include <eigen3/Eigen/Dense>
 #include <Slimage/Slimage.hpp>
 //----------------------------------------------------------------------------//
 namespace common {
diff --git a/lib_dasp/lib_dasp_density/density/CMakeLists.txt b/lib_dasp/lib_dasp_density/density/CMakeLists.txt
index d531a65..19f6966 100755
--- a/lib_dasp/lib_dasp_density/density/CMakeLists.txt
+++ b/lib_dasp/lib_dasp_density/density/CMakeLists.txt
@@ -1,3 +1,5 @@
+find_package(OpenCV REQUIRED)
+include_directories(${OpenCV_INCLUDE_DIRS})
 include_directories(${EIGEN_INCLUDE_DIRS} ../../lib_dasp_danvil/ ../../lib_dasp_slimage ../../lib_dasp_common/)
 
 add_library(dasp_density
diff --git a/lib_dasp/lib_dasp_density/density/PointDensity.hpp b/lib_dasp/lib_dasp_density/density/PointDensity.hpp
index 7432a0f..fc9c643 100755
--- a/lib_dasp/lib_dasp_density/density/PointDensity.hpp
+++ b/lib_dasp/lib_dasp_density/density/PointDensity.hpp
@@ -2,7 +2,7 @@
 #define INCLUDED_PDS_DENSITY_HPP
 
 #include <Danvil/Tools/FunctionCache.h>
-#include <Eigen/Dense>
+#include <eigen3/Eigen/Dense>
 #include <vector>
 
 namespace density
diff --git a/lib_dasp/lib_dasp_density/density/ScalePyramid.hpp b/lib_dasp/lib_dasp_density/density/ScalePyramid.hpp
index ca0fabf..0447909 100755
--- a/lib_dasp/lib_dasp_density/density/ScalePyramid.hpp
+++ b/lib_dasp/lib_dasp_density/density/ScalePyramid.hpp
@@ -9,7 +9,7 @@
 #define INCLUDED_DENSITY_SCALEPYRAMID_HPP_
 
 #include <Slimage/Slimage.hpp>
-#include <Eigen/Dense>
+#include <eigen3/Eigen/Dense>
 #include <stdexcept>
 #include <vector>
 #include <tuple>
diff --git a/lib_dasp/lib_dasp_density/density/Smooth.hpp b/lib_dasp/lib_dasp_density/density/Smooth.hpp
index 1f232f4..3f26650 100755
--- a/lib_dasp/lib_dasp_density/density/Smooth.hpp
+++ b/lib_dasp/lib_dasp_density/density/Smooth.hpp
@@ -1,7 +1,7 @@
 #ifndef INCLUDED_DENSITY_SMOOTH_HPP
 #define INCLUDED_DENSITY_SMOOTH_HPP
 
-#include <Eigen/Dense>
+#include <eigen3/Eigen/Dense>
 
 namespace density
 {
diff --git a/lib_dasp/lib_dasp_density/density/Visualization.hpp b/lib_dasp/lib_dasp_density/density/Visualization.hpp
index 789f4e5..083255d 100755
--- a/lib_dasp/lib_dasp_density/density/Visualization.hpp
+++ b/lib_dasp/lib_dasp_density/density/Visualization.hpp
@@ -3,7 +3,7 @@
 
 #include <Danvil/Color.h>
 #include <Slimage/Slimage.hpp>
-#include <Eigen/Dense>
+#include <eigen3/Eigen/Dense>
 #include <vector>
 
 namespace density
diff --git a/lib_dasp/lib_dasp_graphseg/Common.hpp b/lib_dasp/lib_dasp_graphseg/Common.hpp
index 4b2fb40..23a6796 100755
--- a/lib_dasp/lib_dasp_graphseg/Common.hpp
+++ b/lib_dasp/lib_dasp_graphseg/Common.hpp
@@ -9,7 +9,7 @@
 #define DASP_SPECTRAL_COMMON_HPP
 
 #include <boost/graph/adjacency_list.hpp>
-#include <Eigen/Dense>
+#include <eigen3/Eigen/Dense>
 #include <vector>
 
 namespace graphseg
diff --git a/lib_dasp/lib_dasp_graphseg/Rendering.hpp b/lib_dasp/lib_dasp_graphseg/Rendering.hpp
index 5d2fb92..8c12b79 100755
--- a/lib_dasp/lib_dasp_graphseg/Rendering.hpp
+++ b/lib_dasp/lib_dasp_graphseg/Rendering.hpp
@@ -7,7 +7,7 @@
 #include <GL/glew.h>
 #include <graphseg/as_range.hpp>
 #include <boost/graph/adjacency_list.hpp>
-#include <Eigen/Dense>
+#include <eigen3/Eigen/Dense>
 
 namespace graphseg
 {
diff --git a/lib_dasp/lib_dasp_graphseg/spectral/eigen.cpp b/lib_dasp/lib_dasp_graphseg/spectral/eigen.cpp
index 717da4a..efda39e 100755
--- a/lib_dasp/lib_dasp_graphseg/spectral/eigen.cpp
+++ b/lib_dasp/lib_dasp_graphseg/spectral/eigen.cpp
@@ -1,5 +1,5 @@
 #include "solver.hpp"
-#include <Eigen/Dense>
+#include <eigen3/Eigen/Dense>
 #ifdef SPECTRAL_VERBOSE
 #	include <iostream>
 #endif
diff --git a/lib_dasp/lib_dasp_pds/pds/Fattal.hpp b/lib_dasp/lib_dasp_pds/pds/Fattal.hpp
index 2fce379..9edaac0 100755
--- a/lib_dasp/lib_dasp_pds/pds/Fattal.hpp
+++ b/lib_dasp/lib_dasp_pds/pds/Fattal.hpp
@@ -10,7 +10,7 @@
 //----------------------------------------------------------------------------//
 #include <Slimage/Slimage.hpp>
 #include <Danvil/Tools/FunctionCache.h>
-#include <Eigen/Dense>
+#include <eigen3/Eigen/Dense>
 #include <vector>
 #include <algorithm>
 #include <cmath>
diff --git a/lib_dasp/lib_dasp_pds/pds/PDS.hpp b/lib_dasp/lib_dasp_pds/pds/PDS.hpp
index 91185d3..8be9ba1 100755
--- a/lib_dasp/lib_dasp_pds/pds/PDS.hpp
+++ b/lib_dasp/lib_dasp_pds/pds/PDS.hpp
@@ -1,7 +1,7 @@
 #ifndef INCLUDED_PDS_PDS_HPP
 #define INCLUDED_PDS_PDS_HPP
 
-#include <Eigen/Dense>
+#include <eigen3/Eigen/Dense>
 #include <vector>
 
 namespace pds
diff --git a/lib_dasp/lib_dasp_slimage/Slimage/detail/OpenCv.hpp b/lib_dasp/lib_dasp_slimage/Slimage/detail/OpenCv.hpp
index 19b6976..0f92849 100755
--- a/lib_dasp/lib_dasp_slimage/Slimage/detail/OpenCv.hpp
+++ b/lib_dasp/lib_dasp_slimage/Slimage/detail/OpenCv.hpp
@@ -9,7 +9,15 @@
 #define SLIMAGE_DETAIL_OPENCV_HPP_
 //----------------------------------------------------------------------------//
 #include "../Slimage.hpp"
-#include <opencv2/highgui/highgui.hpp>
+
+// 20250605 OpenCV4 upgrades -- mathematicalmichael
+#include <opencv2/core/version.hpp>
+#if CV_VERSION_MAJOR >= 4
+    #include <opencv2/highgui.hpp>
+#else
+	#include <opencv2/highgui/highgui.hpp>
+#endif
+
 //----------------------------------------------------------------------------//
 namespace slimage {
 //----------------------------------------------------------------------------//
diff --git a/lib_etps/CMakeLists.txt b/lib_etps/CMakeLists.txt
index f08814a..de02b3f 100644
--- a/lib_etps/CMakeLists.txt
+++ b/lib_etps/CMakeLists.txt
@@ -36,8 +36,16 @@ find_package(PNG REQUIRED)
 find_package(png++ REQUIRED)
 
 if(CMAKE_COMPILER_IS_GNUCXX)
-   set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++0x -msse4.2") # Removed -O3 nand -std=c++11
-endif(CMAKE_COMPILER_IS_GNUCXX)
+  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++0x")
+
+  if(CMAKE_SYSTEM_PROCESSOR MATCHES "x86_64")
+    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -msse4.2")
+  elseif(CMAKE_SYSTEM_PROCESSOR MATCHES "aarch64" OR CMAKE_SYSTEM_PROCESSOR MATCHES "arm64")
+    # enable AArch64 Advanced SIMD
+    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -march=armv8-a+simd")
+  endif()
+endif()
+
 
 include_directories(${OpenCV_INCLUDE_DIRS}
     ${PNG_INCLUDE_DIR}
diff --git a/lib_etps/SGMStereo.cpp b/lib_etps/SGMStereo.cpp
index a4cccef..035909b 100644
--- a/lib_etps/SGMStereo.cpp
+++ b/lib_etps/SGMStereo.cpp
@@ -19,7 +19,153 @@
 #include <limits.h>
 #include <stack>
 #include <algorithm>
-#include <nmmintrin.h>
+
+#if defined(__aarch64__) || defined(__ARM_NEON__) || defined(__ARM_NEON)
+  // ARM64 or ARM32 with NEON:
+  #include <arm_neon.h>
+  #include <stdlib.h>   // posix_memalign, free
+  #include <stdint.h>
+
+  // ----------------------------------------------------------------------------
+  // Memory allocation
+  // ----------------------------------------------------------------------------
+  static inline void* _mm_malloc(size_t size, int align) {
+      void* ptr = nullptr;
+      if (posix_memalign(&ptr, align, size)) return nullptr;
+      return ptr;
+  }
+  #define _mm_free(ptr) free(ptr)
+
+  // ----------------------------------------------------------------------------
+  // 128-bit register alias
+  // ----------------------------------------------------------------------------
+  typedef int16x8_t   __m128i;
+  typedef uint8x16_t  __m128i_u8;
+
+  // ----------------------------------------------------------------------------
+  // Basic constants
+  // ----------------------------------------------------------------------------
+  #define _mm_setzero_si128()        vdupq_n_s16(0)
+  #define _mm_set1_epi16(v)          vdupq_n_s16((v))
+  // broadcast 8-bit v into eight 16-bit lanes
+  #define _mm_set1_epi8(v) \
+    vmovl_s8( \
+      vdup_n_s8((int8_t)(v))  /* int8x8_t */ \
+   )                         /* â int16x8_t */
+
+  // ----------------------------------------------------------------------------
+  // Load / store (aligned)
+  // ----------------------------------------------------------------------------
+  #define _mm_load_si128(p)          vld1q_s16((const int16_t*)(p))
+  #define _mm_store_si128(p,v)       vst1q_s16((int16_t*)(p),(v))
+
+  // ----------------------------------------------------------------------------
+  // Load / store (unaligned) â 16-bit
+  // ----------------------------------------------------------------------------
+  #define _mm_loadu_si128(p)         vld1q_s16((const int16_t*)(p))
+  #define _mm_storeu_si128(p,v)      vst1q_s16((int16_t*)(p),(v))
+
+  // ----------------------------------------------------------------------------
+  // Load / store (unaligned) â 8-bit
+  // ----------------------------------------------------------------------------
+  #define _mm_loadu_si128_u8(p)      vld1q_u8((const uint8_t*)(p))
+  #define _mm_storeu_si128_u8(p,v)   vst1q_u8((uint8_t*)(p),(v))
+
+  // ----------------------------------------------------------------------------
+  // Saturating add / sub, min / max
+  // ----------------------------------------------------------------------------
+  #define _mm_adds_epi16(a,b)        vqaddq_s16((a),(b))
+  #define _mm_subs_epi16(a,b)        vqsubq_s16((a),(b))
+  #define _mm_min_epi16(a,b)         vminq_s16((a),(b))
+  #define _mm_max_epi16(a,b)         vmaxq_s16((a),(b))
+
+  // ----------------------------------------------------------------------------
+  // Non-saturating add / sub
+  // ----------------------------------------------------------------------------
+  #define _mm_add_epi16(a,b)         vaddq_s16((a),(b))
+  #define _mm_sub_epi16(a,b)         vsubq_s16((a),(b))
+
+  // ----------------------------------------------------------------------------
+  // Byte-wide min / sub / max â saturated
+  // ----------------------------------------------------------------------------
+  #define _mm_max_epu8(a,b) \
+    vreinterpretq_s16_u8( \
+      vmaxq_u8( \
+        vreinterpretq_u8_s16(a), \
+        vreinterpretq_u8_s16(b)  \
+      ) \
+    )
+
+  #define _mm_subs_epu8(a,b) \
+    vreinterpretq_s16_u8( \
+      vqsubq_u8( \
+        vreinterpretq_u8_s16(a), \
+        vreinterpretq_u8_s16(b)  \
+      ) \
+    )
+
+  #define _mm_min_epu8(a,b) \
+    vreinterpretq_s16_u8( \
+      vminq_u8( \
+        vreinterpretq_u8_s16(a), \
+        vreinterpretq_u8_s16(b)  \
+      ) \
+    )
+  // ----------------------------------------------------------------------------
+  // popcnt â compiler builtin
+  // ----------------------------------------------------------------------------
+  #define _mm_popcnt_u32(x)          __builtin_popcount((unsigned)(x))
+
+  // ----------------------------------------------------------------------------
+  // unpack (zero-extend) low/high 8 bytes of a â 16-bit lanes
+  // (used for SAD loops)
+  // ----------------------------------------------------------------------------
+  // unpack 8 low bytes of 'a' (ignore 'b'), zeroâwiden to 16âbit lanes,
+  // and return as custom __m128i (int16x8_t):
+  #define _mm_unpacklo_epi8(a,b) \
+    vreinterpretq_s16_u16( \
+      vmovl_u8( \
+      vget_low_u8( vreinterpretq_u8_s16(a) ) \
+      ) \
+    )
+
+  // same for the high 8 bytes:
+  #define _mm_unpackhi_epi8(a,b) \
+    vreinterpretq_s16_u16( \
+      vmovl_u8( \
+      vget_high_u8( vreinterpretq_u8_s16(a) ) \
+      ) \
+    )
+
+  // ----------------------------------------------------------------------------
+  // unpack (interleave) low/high 16-bit lanes of a and b
+  // ----------------------------------------------------------------------------
+  #define _mm_unpacklo_epi16(a,b)    vzipq_s16((a),(b)).val[0]
+  #define _mm_unpackhi_epi16(a,b)    vzipq_s16((a),(b)).val[1]
+
+  // ----------------------------------------------------------------------------
+  // shift right by bytes (e.g. _mm_srli_si128(a,8))
+  // ----------------------------------------------------------------------------
+  static inline __m128i _mm_srli_si128(__m128i a, const int imm) {
+      return vreinterpretq_s16_s8(
+          vextq_s8(vreinterpretq_s8_s16(a),
+                   vreinterpretq_s8_s16(a),
+                   imm)
+      );
+  }
+
+  // ----------------------------------------------------------------------------
+  // store lower 64-bits of a 128-bit reg
+  // ----------------------------------------------------------------------------
+  #define _mm_storel_epi64(p,v)      vst1q_lane_s64((int64_t*)(p), vreinterpretq_s64_s16((v)), 0)
+
+#elif defined(__x86_64__) || defined(__i386__) || defined(__SSE4_2__)
+  // x86 with SSE4.2:
+  #include <nmmintrin.h>
+#else
+  #error "No SIMD intrinsics available on this platform"
+#endif
+
 #include <stdexcept>
 
 // Default parameters
diff --git a/lib_etps/spixel.cpp b/lib_etps/spixel.cpp
index 3e88a45..124c6f5 100644
--- a/lib_etps/spixel.cpp
+++ b/lib_etps/spixel.cpp
@@ -12,6 +12,15 @@
 using namespace cv;
 using namespace std;
 
+// 20250605 OpenCV4 upgrades -- mathematicalmichael
+#include <opencv2/core/version.hpp>
+#if CV_VERSION_MAJOR >= 4
+    #undef CV_LOAD_IMAGE_COLOR
+    #undef CV_LOAD_IMAGE_ANYDEPTH
+    #define CV_LOAD_IMAGE_COLOR cv::IMREAD_COLOR
+    #define CV_LOAD_IMAGE_ANYDEPTH cv::IMREAD_ANYDEPTH
+#endif
+
 void ConvertOCVToPNG(const Mat& ocvImg, png::image<png::rgb_pixel>& pngImg)
 {
     pngImg.resize(ocvImg.cols, ocvImg.rows);
diff --git a/lib_etps/stdafx.h b/lib_etps/stdafx.h
index ed35f0d..fdeb13a 100644
--- a/lib_etps/stdafx.h
+++ b/lib_etps/stdafx.h
@@ -19,8 +19,15 @@
 
 // TODO: reference additional headers your program requires here
 #include <opencv2/core/core.hpp>
-#include <opencv2/highgui/highgui.hpp>
 #include <opencv2/photo/photo.hpp>
+// 20250605 OpenCV4 upgrades -- mathematicalmichael
+#include <opencv2/core/version.hpp>
+#if CV_VERSION_MAJOR >= 4
+    #include <opencv2/highgui.hpp>
+#else
+	#include <opencv2/highgui/highgui.hpp>
+#endif
+
 
 //[ For finding Memory leaks
 // #define _CRTDBG_MAP_ALLOC
diff --git a/lib_eval/evaluation.cpp b/lib_eval/evaluation.cpp
index 3555af0..3484fb7 100644
--- a/lib_eval/evaluation.cpp
+++ b/lib_eval/evaluation.cpp
@@ -34,6 +34,15 @@
 #include "io_util.h"
 #include "evaluation.h"
 
+// 20250605 OpenCV4 upgrades -- mathematicalmichael
+#include <opencv2/core/version.hpp>
+#if CV_VERSION_MAJOR >= 4
+    #undef CV_BGR2GRAY
+    #undef CV_DIST_L2
+    #define CV_BGR2GRAY cv::COLOR_BGR2GRAY
+    #define CV_DIST_L2  cv::DIST_L2
+#endif
+
 ////////////////////////////////////////////////////////////////////////////////
 // computeBoundaryRecall
 ////////////////////////////////////////////////////////////////////////////////
diff --git a/lib_eval/evaluation_summary.cpp b/lib_eval/evaluation_summary.cpp
index e94762a..ffa8ae9 100644
--- a/lib_eval/evaluation_summary.cpp
+++ b/lib_eval/evaluation_summary.cpp
@@ -38,6 +38,14 @@
 #include "io_util.h"
 #include "evaluation_summary.h"
 
+// 20250605 OpenCV4 upgrades -- mathematicalmichael
+#include <opencv2/core/version.hpp>
+#if CV_VERSION_MAJOR >= 4
+    // #include <opencv2/imgcodecs.hpp>
+    #undef CV_LOAD_IMAGE_COLOR
+    #define CV_LOAD_IMAGE_COLOR cv::IMREAD_COLOR
+#endif
+
 ////////////////////////////////////////////////////////////////////////////////
 // Constructor
 ////////////////////////////////////////////////////////////////////////////////
diff --git a/lib_eval/robustness_tool.cpp b/lib_eval/robustness_tool.cpp
index 08400e9..0cd0680 100644
--- a/lib_eval/robustness_tool.cpp
+++ b/lib_eval/robustness_tool.cpp
@@ -36,6 +36,15 @@
 #include "evaluation_summary.h"
 #include "robustness_tool.h"
 
+#include <opencv2/core/version.hpp>
+#if CV_VERSION_MAJOR >= 4
+    // #include <opencv2/imgproc.hpp>
+    #undef CV_BGR2Lab
+    #undef CV_Lab2BGR
+    #define CV_BGR2Lab cv::COLOR_BGR2Lab
+    #define CV_Lab2BGR cv::COLOR_Lab2BGR
+#endif
+
 ////////////////////////////////////////////////////////////////////////////////
 // RobustnessTool::RobustnessTool
 ////////////////////////////////////////////////////////////////////////////////
diff --git a/lib_eval/transformation.cpp b/lib_eval/transformation.cpp
index 8ad2729..f03111b 100644
--- a/lib_eval/transformation.cpp
+++ b/lib_eval/transformation.cpp
@@ -33,6 +33,14 @@
 #include <glog/logging.h>
 #include "transformation.h"
 
+// 20250605 OpenCV4 upgrades -- mathematicalmichael
+#include <opencv2/core/version.hpp>
+#if CV_VERSION_MAJOR >= 4
+    // #include <opencv2/imgproc.hpp>
+    #undef CV_BGR2GRAY
+    #define CV_BGR2GRAY cv::COLOR_BGR2GRAY
+#endif
+
 ////////////////////////////////////////////////////////////////////////////////
 // Transformation::applyGaussianAdditiveNoise
 ////////////////////////////////////////////////////////////////////////////////
diff --git a/lib_preslic/preemptiveSLIC.cpp b/lib_preslic/preemptiveSLIC.cpp
index 253a3ef..5a4d2bb 100644
--- a/lib_preslic/preemptiveSLIC.cpp
+++ b/lib_preslic/preemptiveSLIC.cpp
@@ -44,6 +44,14 @@
 using namespace std;
 using namespace cv;
 
+// 20250605 OpenCV4 upgrades -- mathematicalmichael
+#include <opencv2/core/version.hpp>
+#if CV_VERSION_MAJOR >= 4
+    #undef CV_BGR2Lab
+    #define CV_BGR2Lab cv::COLOR_BGR2Lab
+#endif
+
+
 //////////////////////////////////////////////////////////////////////
 // Construction/Destruction
 //////////////////////////////////////////////////////////////////////
diff --git a/lib_qs/host.c b/lib_qs/host.c
index ef97cdc..7eb197e 100644
--- a/lib_qs/host.c
+++ b/lib_qs/host.c
@@ -441,6 +441,15 @@ _vl_cpuid (vl_int32* info, int function)
 
 #endif
 
+/* Fallback stub for non-x86 (ARM, etc.) */
+#if !defined(HAS_CPUID)
+VL_INLINE void
+_vl_cpuid(vl_int32 info[4], int function)
+{
+    info[0] = info[1] = info[2] = info[3] = 0;
+}
+#endif
+
 void
 _vl_x86cpu_info_init (VlX86CpuInfo *self)
 {
diff --git a/lib_vccs/CMakeLists.txt b/lib_vccs/CMakeLists.txt
index 5fd196b..2733372 100644
--- a/lib_vccs/CMakeLists.txt
+++ b/lib_vccs/CMakeLists.txt
@@ -32,7 +32,15 @@ cmake_minimum_required (VERSION 2.8)
 project (superpixel_benchmark)
 
 find_package(OpenCV REQUIRED)
-find_package(PCL REQUIRED)
+
+if(NOT TARGET JsonCpp::JsonCpp)
+  add_library(JsonCpp::JsonCpp INTERFACE IMPORTED)
+  set_target_properties(JsonCpp::JsonCpp PROPERTIES
+    INTERFACE_INCLUDE_DIRECTORIES "/usr/include/jsoncpp"
+    INTERFACE_LINK_LIBRARIES jsoncpp)
+endif()
+find_package(PCL REQUIRED COMPONENTS common io filters kdtree search sample_consensus features ml registration segmentation)
+
 include_directories(${PCL_INCLUDE_DIRS} ${EIGEN_INCLUDE_DIRS} ${OpenCV_INCLUDE_DIRS})
 # link_directories(${PCL_LIBRARY_DIRS})
 # add_definitions(${PCL_DEFINITIONS})
diff --git a/lib_vccs/vccs_opencv_pcl.cpp b/lib_vccs/vccs_opencv_pcl.cpp
index f3cf45a..94b500b 100644
--- a/lib_vccs/vccs_opencv_pcl.cpp
+++ b/lib_vccs/vccs_opencv_pcl.cpp
@@ -84,9 +84,13 @@ void VCCS_OpenCV_PCL::computeSuperpixels(const cv::Mat &image, const cv::Mat &cl
             point_cloud->push_back(point);
         }
     }
-    
-    pcl::SupervoxelClustering<pcl::PointXYZRGBA> super(voxel_resolution, seed_resolution, 
-            use_transform);
+
+    #if PCL_VERSION_COMPARE(>=, 1, 13, 0)
+        pcl::SupervoxelClustering<pcl::PointXYZRGBA> super(voxel_resolution, seed_resolution);
+    #else
+        pcl::SupervoxelClustering<pcl::PointXYZRGBA> super(voxel_resolution, seed_resolution, use_transform);
+    #endif
+
     super.setInputCloud(point_cloud);
     
     float color_weight = 1.f - spatial_weight - normal_weight;
diff --git a/lib_vlslic/host.c b/lib_vlslic/host.c
index ef97cdc..7eb197e 100644
--- a/lib_vlslic/host.c
+++ b/lib_vlslic/host.c
@@ -441,6 +441,15 @@ _vl_cpuid (vl_int32* info, int function)
 
 #endif
 
+/* Fallback stub for non-x86 (ARM, etc.) */
+#if !defined(HAS_CPUID)
+VL_INLINE void
+_vl_cpuid(vl_int32 info[4], int function)
+{
+    info[0] = info[1] = info[2] = info[3] = 0;
+}
+#endif
+
 void
 _vl_x86cpu_info_init (VlX86CpuInfo *self)
 {
diff --git a/vccs_cli/CMakeLists.txt b/vccs_cli/CMakeLists.txt
index 5976e0e..3cd52c3 100755
--- a/vccs_cli/CMakeLists.txt
+++ b/vccs_cli/CMakeLists.txt
@@ -32,7 +32,14 @@ include_directories(../lib_seeds_revised_depth/)
 
 find_package(Boost COMPONENTS system filesystem program_options REQUIRED)
 find_package(OpenCV REQUIRED)
-find_package(PCL REQUIRED)
+
+if(NOT TARGET JsonCpp::JsonCpp)
+  add_library(JsonCpp::JsonCpp INTERFACE IMPORTED)
+  set_target_properties(JsonCpp::JsonCpp PROPERTIES
+    INTERFACE_INCLUDE_DIRECTORIES "/usr/include/jsoncpp"
+    INTERFACE_LINK_LIBRARIES jsoncpp)
+endif()
+find_package(PCL REQUIRED COMPONENTS common io filters kdtree search sample_consensus features ml registration segmentation)
 
 include_directories(../lib_eval/
     ../lib_vccs/
diff --git a/vccs_cli/main.cpp b/vccs_cli/main.cpp
index 49af72c..0c1ee9c 100755
--- a/vccs_cli/main.cpp
+++ b/vccs_cli/main.cpp
@@ -41,6 +41,13 @@
 #include "depth_tools.h"
 #include "visualization.h"
 
+// 20250605 OpenCV4 upgrades -- mathematicalmichael
+#include <opencv2/core/version.hpp>
+#if CV_VERSION_MAJOR >= 4
+    #undef CV_LOAD_IMAGE_ANYDEPTH
+    #define CV_LOAD_IMAGE_ANYDEPTH cv::IMREAD_ANYDEPTH
+#endif
+
 /** \brief Command line tool for running VCCS.
  * Usage:
  * \code{sh}
